@using Microsoft.AspNetCore.Html

@model List<DrugFarmModel>

@{
    ViewData["Title"] = "Список лекарств";
}

@functions {
    //ЧАСТЬ 3: Внутренний метод представления таблицы
    public HtmlString RenderDrugList(List<DrugFarmModel> drugs)
    {
        var html = "<table class='table'><thead><tr>" +
                  "<th>ID</th>" +
                  "<th>Название</th>" +
                  "<th>Форма выпуска</th>" +
                  "<th>Номер упаковки</th>" +
                  "<th>Дата производства</th>" +
                  "<th>Стоимость</th>" +
                  "<th>Действия</th>" +
                  "</tr></thead><tbody>";

        // ЧАСТЬ 2: while
        int i = 0;
        while (i < drugs.Count)
        {
            var drug = drugs[i];
            html += $"<tr>" +
                   $"<td>{drug.DrugId}</td>" +
                   $"<td>{drug.DrugName}</td>" +
                   $"<td>{drug.FormPack}</td>" +
                   $"<td>{drug.PackId}</td>" +
                   $"<td>{drug.ProductionDate}</td>" +
                   $"<td>{drug.Price}</td>" +
                   $"<td>" +
                   $"<a href='/DrugFarm/Details/{drug.DrugId}' class='btn btn-secondary'>Просмотр</a> " +
                   $"<a href='/DrugFarm/Red/{drug.DrugId}' class='btn btn-primary'>Редактировать</a>" +
                   $"</td></tr>";
            i++;
        }
        html += "</tbody></table>";

        return new HtmlString(html);
    }
}

<h2>Список лекарств</h2>
<div>@Html.ActionLink("Добавить лекарство", "Create", null, new { @class = "btn btn-primary" })</div>
<div>@Html.ActionLink("Просмотр Cookie", "ViewCookies", null, new { @class = "btn btn-info" })</div>

<!-- ЧАСТЬ 3: Выбор метода с помощью ViewData -->
@{
    bool useInternalMethod = ViewData["UseInternalMethod"] as bool? ?? false;

    if (useInternalMethod)
    {
        @RenderDrugList(Model)
    }
    else
    {
        @TP_LABA5.Helpers.DrugHelper.ExternalDrugList(Model)
    }
}